---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: 
    kubernetes.io/change-cause: "${CI_COMMIT_MESSAGE}"
  labels:
    app: front-course-${CI_ENVIRONMENT_NAME}
  name: front-course-${CI_ENVIRONMENT_NAME}
spec:
  replicas: 2
  revisionHistoryLimit: 100
  selector:
    matchLabels:
      app: front-course-${CI_ENVIRONMENT_NAME}
  template:
    metadata:
      labels:
        app: front-course-${CI_ENVIRONMENT_NAME}
    spec:
      restartPolicy: Always
      imagePullSecrets:
      - name: katiatxi-front
      containers:
      - image: ${CI_REGISTRY_IMAGE}:front-course-${CI_COMMIT_SHORT_SHA}
        name: front-course-${CI_ENVIRONMENT_NAME}
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 2500m
            memory: 2000Mi
#      affinity:
#         podAntiAffinity:
#           requiredDuringSchedulingIgnoredDuringExecution:
#           - labelSelector:
#               matchLabels:
#                 app: front-course-${CI_ENVIRONMENT_NAME}
#             topologyKey: "kubernetes.io/hostname"
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 5
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
---
apiVersion: v1
kind: Service
metadata:
  name: front-course
spec:
  ports:
  - name: "http"
    port: 80
    targetPort: 80
  selector:
    app: front-course-${CI_ENVIRONMENT_NAME}
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  name: front-course-${CI_ENVIRONMENT_NAME}-ingress
spec:
  tls:
  - hosts:
    - courses.katiatxi.club
    secretName: course-${CI_ENVIRONMENT_NAME}-tls
  rules:
  - host: courses.katiatxi.club
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: front-course
              port:
                number: 80
